static const char *RcsId = "$Header$";
//+=============================================================================
//
// file :         CTExpChannelStateMachine.cpp
//
// description :  C++ source for the CTExpChannel and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author$
//
// $Revision$
//
// $Log$
// Revision 1.8  2007/07/26 07:05:42  tcoutinho
// fix bug 10 : Change all tango commands from Stop to Abort
//
// Revision 1.7  2007/05/30 14:35:11  etaurel
// - Fix Value attribute state machine
//
// Revision 1.6  2007/05/22 12:55:06  etaurel
// - Fix returned value in the Value attribute state machine
//
// Revision 1.5  2007/02/08 07:55:01  etaurel
// - Changes after compilation -Wall. Some small changes
//
// Revision 1.4  2007/01/26 08:34:17  etaurel
// - We now have a first release of ZeroDController
//
// Revision 1.3  2007/01/16 16:50:04  etaurel
// - It's now possible to write the Value attribute
//
// Revision 1.2  2007/01/16 14:23:19  etaurel
// - First release with Counter Timer
//
// Revision 1.1  2007/01/05 15:03:15  etaurel
// - First implementation of the Counter Timer class
//
//
// copyleft :   CELLS/ALBA
//		Edifici Ciences Nord
//		Campus Universitari de Bellaterra
//		Universitat Autonoma de Barcelona
//		08193 Bellaterra, Barcelona, SPAIN
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//=============================================================================

#include <CtrlFiCa.h>
#include <tango.h>
#include <CTExpChannel.h>
#include <CTExpChannelClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace CTExpChannel_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		CTExpChannel::is_Value_allowed
// 
// description : 	Read/Write allowed for Value attribute.
//
//-----------------------------------------------------------------------------
bool CTExpChannel::is_Value_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::MOVING	||
		get_state() == Tango::UNKNOWN)
	{
		//	End of Generated Code
		
		if (get_state() == Tango::MOVING && type == Tango::WRITE_REQ)
		{
			return false;
		}
		else
			return true;
	}
	else
	{
		if ((type == Tango::WRITE_REQ) && ((pool_sd == true) || (get_state() == Tango::MOVING)))

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CTExpChannel::is_SimulationMode_allowed
// 
// description : 	Read/Write allowed for SimulationMode attribute.
//
//-----------------------------------------------------------------------------
bool CTExpChannel::is_SimulationMode_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::MOVING	||
		get_state() == Tango::UNKNOWN)
	{
		//	End of Generated Code
		return false;
	}
	else
	{
		if ((type == Tango::WRITE_REQ) && ((pool_sd == true) || (get_state() == Tango::MOVING)))

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		CTExpChannel::is_Start_allowed
// 
// description : 	Execution allowed for Start command.
//
//-----------------------------------------------------------------------------
bool CTExpChannel::is_Start_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::UNKNOWN	||
		get_state() == Tango::MOVING)
	{
		//	End of Generated Code
		return false;
	}
	else
	{
		if (pool_sd == true)

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CTExpChannel::is_Abort_allowed
// 
// description : 	Execution allowed for Abort command.
//
//-----------------------------------------------------------------------------
bool CTExpChannel::is_Abort_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace CTExpChannel_ns

static const char *RcsId = "$Header$";
//+=============================================================================
//
// file :         CommunicationChannelStateMachine.cpp
//
// description :  C++ source for the CommunicationChannel and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author$
//
// $Revision$
//
// $Log$
// Revision 1.2  2007/07/16 12:19:39  tcoutinho
// Changed Comunication to Communication
//
// Revision 1.1  2007/07/16 12:12:23  tcoutinho
// Unfortunately I made a syntax error and named 'Comunication' instead of 'Communication'. The old directory was ComunicationChannel
//
// Revision 1.4  2007/07/12 13:09:25  tcoutinho
// - added Open, Close, ReadLine methods
//
// Revision 1.3  2007/07/09 14:03:25  tcoutinho
// added open and close methods
//
// Revision 1.2  2007/06/28 07:15:34  tcoutinho
// safety commit during comunication channels development
//
// Revision 1.1  2007/06/27 08:54:55  tcoutinho
// first commit for comuncation channels
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <CommunicationChannel.h>
#include <CommunicationChannelClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace CommunicationChannel_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		CommunicationChannel::is_SimulationMode_allowed
// 
// description : 	Read/Write allowed for SimulationMode attribute.
//
//-----------------------------------------------------------------------------
bool CommunicationChannel::is_SimulationMode_allowed(Tango::AttReqType type)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::UNKNOWN)
	{
		//	End of Generated Code
		return false;
	}
	else
	{
		if ((type == Tango::WRITE_REQ) && ((pool_sd == true) || (get_state() == Tango::MOVING)))

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		CommunicationChannel::is_Read_allowed
// 
// description : 	Execution allowed for Read command.
//
//-----------------------------------------------------------------------------
bool CommunicationChannel::is_Read_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::UNKNOWN)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CommunicationChannel::is_Write_allowed
// 
// description : 	Execution allowed for Write command.
//
//-----------------------------------------------------------------------------
bool CommunicationChannel::is_Write_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::UNKNOWN)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CommunicationChannel::is_WriteRead_allowed
// 
// description : 	Execution allowed for WriteRead command.
//
//-----------------------------------------------------------------------------
bool CommunicationChannel::is_WriteRead_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::UNKNOWN)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CommunicationChannel::is_Open_allowed
// 
// description : 	Execution allowed for Open command.
//
//-----------------------------------------------------------------------------
bool CommunicationChannel::is_Open_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CommunicationChannel::is_Close_allowed
// 
// description : 	Execution allowed for Close command.
//
//-----------------------------------------------------------------------------
bool CommunicationChannel::is_Close_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CommunicationChannel::is_ReadLine_allowed
// 
// description : 	Execution allowed for ReadLine command.
//
//-----------------------------------------------------------------------------
bool CommunicationChannel::is_ReadLine_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::FAULT	||
		get_state() == Tango::UNKNOWN)
	{
		//	End of Generated Code

		//	Re-Start of Generated Code
		return false;
	}
	return true;
}

}	// namespace CommunicationChannel_ns
